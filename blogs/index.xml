<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on xfsnowind</title><link>https://xfsnowind.github.io/blogs/</link><description>Recent content in Blogs on xfsnowind</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Oct 2022 22:55:11 +0800</lastBuildDate><atom:link href="https://xfsnowind.github.io/blogs/index.xml" rel="self" type="application/rss+xml"/><item><title>Folderflip Version2</title><link>https://xfsnowind.github.io/blogs/folderflip-version2/</link><pubDate>Thu, 13 Oct 2022 22:55:11 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/folderflip-version2/</guid><description>
As we presented in the previous article, we have showed how to implement the FolderFlip with limited number (like 3) items with the position: sticky and IntersectionObserver.
The Problem But it only allows limited number, if it comes more items or the screen is smaller, the items would not be able to scroll. So how would we display if the items are more and the titles take most of the screen.</description></item><item><title>How to implement a FolderFlip with React</title><link>https://xfsnowind.github.io/blogs/folderflip/</link><pubDate>Tue, 27 Sep 2022 11:15:24 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/folderflip/</guid><description>
Haven't updated the blogs for a long time. Just had been struggling on the house work during the whole summer time, painting external and internal wall, new bathroom and etc. But there is still the good news, implemented an interesting frontend component with React, which would inspired by lifeatspotify - borrow the name FolderFlip.
The original idea was come up with by the UX designer in our team, she would like to develop a fancy component which can be used to present the company culture.</description></item><item><title>Learning Notes - Azure Challenge</title><link>https://xfsnowind.github.io/blogs/azure-challenge/</link><pubDate>Thu, 18 Aug 2022 13:48:36 +0200</pubDate><guid>https://xfsnowind.github.io/blogs/azure-challenge/</guid><description>
This blog is about the Azure developer challenge from Sparebanken Vest. I would like to write the learning notes here.
Explore Azure App Service Target: Learn about the key components of Azure App Service and how App Service can help you create, maintain, and deploy web apps more efficiently.
Azure App Service So what is Azure App Service? It's a Http-based service, which would server for web application, REST APIs and mobile backends.</description></item><item><title>Learning Notes - React Hooks</title><link>https://xfsnowind.github.io/blogs/geektime/react-hooks/</link><pubDate>Sun, 07 Aug 2022 14:50:28 +0200</pubDate><guid>https://xfsnowind.github.io/blogs/geektime/react-hooks/</guid><description>
This article is a summary when I learned the React Hooks course in GeekTime. Even though we all use React Hooks in the frontend development, I cannot say I understand the internal core and logic of it. So this is a good time to re-learn it through this course. According to my experience, it's definitely better to write down the idea and thoughts down -- The palest ink is better than the best memory.</description></item><item><title>Promise implementation</title><link>https://xfsnowind.github.io/blogs/promise/</link><pubDate>Sat, 06 Aug 2022 22:30:08 +0200</pubDate><guid>https://xfsnowind.github.io/blogs/promise/</guid><description>
Promise is a general concept to handle the asynchronize development in javascript. It's not hard to use, but when it comes with some other concepts, like react's hook, its internal chain etc. It always takes me some time to think through it. Especially when check the code of some open-source libraries, find the way they use Promise is quite fancy and also hard to understand, which reminders me that I am still stay on the level of using, far away from deep understanding.</description></item><item><title>Learning Plan</title><link>https://xfsnowind.github.io/blogs/learning-plan/</link><pubDate>Thu, 28 Jul 2022 21:56:39 +0200</pubDate><guid>https://xfsnowind.github.io/blogs/learning-plan/</guid><description>
The techniques and some project I plan to learn or finish:
gRPC vs REST -- get some knowledge of gRPC Esbuild, vite, svelte -- understand the difference of vite and esbuild, apply esbuild for develop and webpack for production webpack hotload ES6 ES7 -- get overview of ES6 and ES7 Command kitty -- get familiar with kitty material design -- get to know how to use material design Flutter vs React Native -- get some overview of mobile development React-hook form website with react, redux -- use react-hook-form to generate a full form again and deploy Hugo personal github page -- xfsnowind React long lists -- how to render the long list if it's over 1 million Go through test framework of js, jest, react-testing-library -- review the test library of js Blog for learning geektime -- learning some topics throught geektime http headers -- go through the http headers to get an overview Regular express forward -- deep learn the regex forward again Terraform -- get knowledge of it Promise -- write promise self with different js tech until not forget it any more Kubernetes</description></item></channel></rss>