<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on xfsnowind</title><link>https://xfsnowind.github.io/tags/react/</link><description>Recent content in React on xfsnowind</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 10 Jun 2023 16:06:56 +0800</lastBuildDate><atom:link href="https://xfsnowind.github.io/tags/react/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Notes From New React Website</title><link>https://xfsnowind.github.io/blogs/learning-notes-from-new-react-website/</link><pubDate>Sat, 10 Jun 2023 16:06:56 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/learning-notes-from-new-react-website/</guid><description>
It has been a while after React published its new webiste, I would write down what I learnt from the new webiste.
Describe the UI List Key I know this is an old issue, but I used to use index as the key of list. To summarize it, I will note the correct way to use the key:
Why do we have to use key for the list item? Because the item in the list could be modified, such as insert, deleted or re-sorted, so the React need to know which item the component is responible to.</description></item><item><title>Draw a scalable line with React Konva</title><link>https://xfsnowind.github.io/blogs/react-konva-draw-line/</link><pubDate>Wed, 15 Feb 2023 16:20:25 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/react-konva-draw-line/</guid><description>
These days I need to implement a component to draw a line on the given image and this line should be scalable, draggable and limited within the image. So here are the steps to implement it.
Konva Definitely we need canvas to complete it, but instead of using canvas directly, it's better to use some mature library, like Konva
an HTML5 Canvas JavaScript framework that extends the 2d context by enabling canvas interactivity for desktop and mobile applications.</description></item><item><title>Powerful type-checking of React-hook-form and Learning Notes</title><link>https://xfsnowind.github.io/blogs/react-hook-form-notes/</link><pubDate>Sat, 28 Jan 2023 16:05:09 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/react-hook-form-notes/</guid><description>
The first time I touched the React-hook-form was in 2020 and it also was the first time I learned React's new concept Hooks. During that time we compared all the popular form libraries, Formik, react-form, final form and etc, but we finally chose the React-hook-form even though it was still under the development during that time. It is because it uses React latest concept Hooks. And React was our fundamental framework in my previous company, so we didn't need to think about the compatibility.</description></item><item><title>How to implement Virtualized Grid/List in React</title><link>https://xfsnowind.github.io/blogs/react-virtualized/</link><pubDate>Sat, 03 Dec 2022 22:22:49 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/react-virtualized/</guid><description>
Around 2018, one of my colleague was working on creating a list component which only renders a limited amount of items in the list instead of the whole one to improve the performance if the list is in large or huge scale. I was always interested at how he did that, but I did not do any investment, just an idea. Then once I was asked how to implement such thing during an interview, it remindered me.</description></item><item><title>How to implement a FolderFlip 2</title><link>https://xfsnowind.github.io/blogs/folderflip-version2/</link><pubDate>Thu, 13 Oct 2022 22:55:11 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/folderflip-version2/</guid><description>
Update 2022-11-15: add the images to explain the steps
As we presented in the previous article, we have showed how to implement the FolderFlip with limited number (like 3) items with the position: sticky and IntersectionObserver.
The Problem But it only allows limited number, if it comes more items or the screen is smaller, the items would not be able to scroll. So how would we display if the items are more and the titles take most of the screen.</description></item><item><title>How to implement a FolderFlip with React</title><link>https://xfsnowind.github.io/blogs/folderflip/</link><pubDate>Tue, 27 Sep 2022 11:15:24 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/folderflip/</guid><description>
Haven't updated the blogs for a long time. Just had been struggling on the house work during the whole summer time, painting external and internal wall, new bathroom and etc. But there is still the good news, implemented an interesting frontend component with React, which would inspired by lifeatspotify - borrow the name FolderFlip.
The original idea was come up with by the UX designer in our team, she would like to develop a fancy component which can be used to present the company culture.</description></item></channel></rss>