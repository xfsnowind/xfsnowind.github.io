<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on xfsnowind</title><link>https://xfsnowind.github.io/tags/git/</link><description>Recent content in Git on xfsnowind</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Nov 2022 20:47:47 +0800</lastBuildDate><atom:link href="https://xfsnowind.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning Notes - Git rebase vs Git merge</title><link>https://xfsnowind.github.io/blogs/git-rebase/</link><pubDate>Tue, 01 Nov 2022 20:47:47 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/git-rebase/</guid><description>
Git merge Normally, to get the latest update from main branch during development the feature or fix branch, I would checkout to the main branch and git pull the latest commits and then checkout back and run the merge command.
1git checkout main 2git pull 3git checkout FEATURE-BUG-BRANCH 4git merge --no-ff development 5 6or 7 8git checkout main 9git pull 10git merge FEATURE-BUG-BRANCH main It works and will create a MERGE commit in the feature branch.</description></item></channel></rss>