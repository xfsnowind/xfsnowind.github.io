<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Typescript on xfsnowind</title><link>https://xfsnowind.github.io/tags/typescript/</link><description>Recent content in Typescript on xfsnowind</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 11 Mar 2024 14:55:29 +0800</lastBuildDate><atom:link href="https://xfsnowind.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>China Map With Google and Autonavi</title><link>https://xfsnowind.github.io/blogs/china-map-with-google-and-autonavi/</link><pubDate>Mon, 11 Mar 2024 14:55:29 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/china-map-with-google-and-autonavi/</guid><description>
These days I am investigating the map used in Hongkong and China mainland since it uses the different standard according to Chinese law. There are some several interesting points can be discussed here:
Chinese Coordinate System GCJ-02 vs GPS WGS-84 HongKong and Macau in Google Map GCJ-02 in Google Map How to check if a coordinate is in an closed region GeoJson data Pre-handling Extract the outermost border coordinates Checking if a coordinate is inside of a polygon China Mainland is swallowed by HongKong in the border Chinese Coordinate System GCJ-02 vs GPS WGS-84 Today most of the world uses the World Geodetic System WGS-84, where 84 is the latest vision of the standard applied in 1984.</description></item><item><title>Draw a scalable line with React Konva</title><link>https://xfsnowind.github.io/blogs/react-konva-draw-line/</link><pubDate>Wed, 15 Feb 2023 16:20:25 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/react-konva-draw-line/</guid><description>
These days I need to implement a component to draw a line on the given image and this line should be scalable, draggable and limited within the image. So here are the steps to implement it.
Konva Definitely we need canvas to complete it, but instead of using canvas directly, it's better to use some mature library, like Konva
an HTML5 Canvas JavaScript framework that extends the 2d context by enabling canvas interactivity for desktop and mobile applications.</description></item><item><title>Powerful type-checking of React-hook-form and Learning Notes</title><link>https://xfsnowind.github.io/blogs/react-hook-form-notes/</link><pubDate>Sat, 28 Jan 2023 16:05:09 +0800</pubDate><guid>https://xfsnowind.github.io/blogs/react-hook-form-notes/</guid><description>
The first time I touched the React-hook-form was in 2020 and it also was the first time I learned React's new concept Hooks. During that time we compared all the popular form libraries, Formik, react-form, final form and etc, but we finally chose the React-hook-form even though it was still under the development during that time. It is because it uses React latest concept Hooks. And React was our fundamental framework in my previous company, so we didn't need to think about the compatibility.</description></item></channel></rss>